version: '3.9'

services:

  #new service (java_app)
  java_app:
    container_name: java_app
    image: track9/java_app:1.0.0
    build: .
    ports:
      - 8080:8080
    env_file:
      - ./secrets.env
    environment:
      - DATABASE_URL=jdbc:postgresql://java_db:5432/postgres
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
    depends_on:
      - java_db
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  #old service (postgres)

  java_db:
    container_name: java_db
    image: postgres:12
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    # Commented as this code below is not working. I wanted to avoid the default credentials.. But it is not working.  
    # user: "postgres"
    # command: >
    #   bash -c "
    #   postgres -D /var/lib/postgresql/data &
    #   sleep 5 &&
    #   psql -U postgres -tc \"SELECT 1 FROM pg_roles WHERE rolname='track'\" | grep -q 1 || psql -U postgres -c \"CREATE USER track WITH PASSWORD 'trackdb';\" &&
    #   psql -U postgres -c \"GRANT ALL PRIVILEGES ON DATABASE postgres TO track;\" &&
    #   fg
    #   "
volumes:
  pgdata: {}